{"id":"../node_modules/jwt-decode/lib/base64_url_decode.js","dependencies":[{"name":"C:\\React\\SEIMS\\client\\package.json","includedInParent":true,"mtime":1556884550610},{"name":"C:\\React\\SEIMS\\node_modules\\jwt-decode\\package.json","includedInParent":true,"mtime":1556873911525},{"name":"./atob","loc":{"line":1,"column":19},"parent":"C:\\React\\SEIMS\\node_modules\\jwt-decode\\lib\\base64_url_decode.js","resolved":"C:\\React\\SEIMS\\node_modules\\jwt-decode\\lib\\atob.js"}],"generated":{"js":"var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/jwt-decode/lib/base64_url_decode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"../node_modules/jwt-decode/lib/base64_url_decode.js":"var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n"},"lineCount":34}},"error":null,"hash":"c4b785dcb0beb8e197f3f928c22f0ed5","cacheData":{"env":{}}}